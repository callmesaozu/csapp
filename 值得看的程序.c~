//csapp 3.12
void store_prod(num_t *dest, unsigned x, num_t y)
{
	*dest = x * y;
}

dest at %ebp + 8, x at %ebp + 12, y at %ebp + 16

movl 	12(%ebp), %eax
movl 	20(%ebp), %eax
imull 	%eax, %ecx
mull	16(%ebp)
leal 	(%ecx, %edx), %edx
movl	8(%ebp), %ecx
movl 	%eax, (%ecx)
movl 	%edx, 4(%ecx)


//csapp 3.22, 得到x中1数量的奇偶性, 若奇数则返回1
//x at %ebp + 8
	movl 	8(%ebp), %edx
	movl 	$0, %eax
	testl	%edx, %edx	//x|x
	je	.L7				//x == x
.L10:
	xorl	%edx, %eax
	shrl	%edx		//逻辑右移1位
	jne		.L10
.L7:
	andl	$1, %eax

//3.22的C程序
int func_a(unsigned x)
{
	int val = 0;
	while(x != 0)
	{
		val ^= x;
		x >>= 1;
	}
	return val & 1;
}


//3.26 除法
int arith(int x)
{
	return x / 4;
}
//等价的汇编代码
//register: x in %edx
leal	3(%edx), %eax
testl	%edx, %edx
cmovns	%edx, %eax
sarl	$2,	%eax


